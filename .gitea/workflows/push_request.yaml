name: Pull Request Workflow
on:
  pull_request:
    types: [opened, synchronize, closed]
    branches:
      - master
      - '*/*'

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Set apt proxy if needed
        run: |
          if [ -n "${{ vars.HTTP_PROXY }}" ]; then
            echo "Acquire::http::Proxy \"${{ vars.HTTP_PROXY }}\";" | sudo tee /etc/apt/apt.conf.d/99proxy
          fi

      - name: Install root certificate
        run: |
          mkdir -p /usr/share/ca-certificates/extra
          echo "${{ vars.SCTB_ROOT_CERT }}" > /usr/share/ca-certificates/extra/sctb.crt
          echo "extra/sctb.crt" >> /etc/ca-certificates.conf
          update-ca-certificates  

      - name: Install x86_64-w64-mingw32-gcc
        run: |
          sudo apt update
          sudo apt install -y gcc-mingw-w64-x86-64 protobuf-compiler dotnet-sdk-8.0

      - name: Install Libman
        run: dotnet tool install -g Microsoft.Web.LibraryManager.Cli

      - run: echo "${HOME}/.dotnet/tools" >> $GITHUB_PATH
      - run: libman --version

      - name: Install Rust nightly with x86_64-pc-windows-gnu target
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly --target x86_64-pc-windows-gnu,x86_64-unknown-linux-gnu --profile minimal
          echo "${HOME}/.cargo/bin" >> $GITHUB_PATH

      - uses: actions/checkout@master
        with:
          submodules: recursive

      - name: Compile Windows
        run: |
          cargo build --release --target x86_64-pc-windows-gnu

      - name: Compile Linux
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu
      